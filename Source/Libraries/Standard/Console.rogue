class Console : Reader<<Character>>, BufferedPrintWriter<<output_buffer>> [singleton]
  DEFINITIONS
    UP_ARROW    = 17
    DOWN_ARROW  = 18
    RIGHT_ARROW = 19
    LEFT_ARROW  = 20

  METHODS
    method height->Int32
      native @|#ifdef ROGUE_PLATFORM_WINDOWS
              |  HANDLE h_stdout = GetStdHandle( STD_OUTPUT_HANDLE );
              |  CONSOLE_SCREEN_BUFFER_INFO info;
              |  if (GetConsoleScreenBufferInfo(h_stdout,&info)) return (info.srWindow.Bottom - info.srWindow.Top) + 1;
              |  else return 24;
              |#else
              |  struct winsize sz;
              |  ioctl( STDOUT_FILENO, TIOCGWINSZ, &sz );
              |
              |  return sz.ws_row;
              |#endif

    method width->Int32
      native @|#ifdef ROGUE_PLATFORM_WINDOWS
              |  HANDLE h_stdout = GetStdHandle( STD_OUTPUT_HANDLE );
              |  CONSOLE_SCREEN_BUFFER_INFO info;
              |  if (GetConsoleScreenBufferInfo(h_stdout,&info)) return info.dwSize.X;
              |  else return 80;
              |#else
              |  struct winsize sz;
              |  ioctl( STDOUT_FILENO, TIOCGWINSZ, &sz );
              |
              |  return sz.ws_col;
              |#endif

  NATIVE
    nativeHeader
     @|#if defined(ROGUE_PLATFORM_WINDOWS)
      |  #include <io.h>
      |  #define ROGUE_READ_CALL _read
      |#else
      |  #include <termios.h>
      |  #include <unistd.h>
      |  #include <sys/ioctl.h>
      |  #define ROGUE_READ_CALL read
      |#endif
      |
      |#ifndef STDIN_FILENO      /* Probably Windows */
      |  #define STDIN_FILENO  0 /* Probably correct */
      |  #define STDOUT_FILENO 1
      |  #define STDERR_FILENO 2
      |#endif
      |
      |void Rogue_fwrite( const char* utf8, int byte_count, int out );

    nativeCode
      @|void Rogue_fwrite( const char* utf8, int byte_count, int out )
       |{
       |  while (byte_count)
       |  {
       |    int n = (int) write( out, utf8, byte_count );
       |    if (n > 0)
       |    {
       |      utf8 += n;
       |      byte_count -= n;
       |    }
       |  }
       |}

endClass
