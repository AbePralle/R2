module UI

$macro UI_ATTRIBUTE(name,Type,default_value,ComponentType)
  augment
    METHODS
      method UIComponent.name->Type
        return UIAttributes.name( this )

      method UIComponent.$id(set_,name)( value:Type )
        UIAttributes.$id(set_,name)( this, value )

      method UIAttributes.name( component:UIComponent )->Type
        if (component.attributes) return component.attributes.name
        else                      return default_value

      method UIAttributes.$id(set_,name)( component:UIComponent, value:Type )
        if (component.attributes) component.attributes.$id(set_,name)( value )
        else                      component.attributes = ComponentType( value )

      method UIAttribute.name->Type
        if (next) return next.name
        return default_value

      method UIAttribute.$id(set_,name)( value:Type )
        if (next) next.$id(set_,name)( value )
        else      next = ComponentType( value )
  endAugment

  class ComponentType( value:Type ) : UIAttribute
    METHODS
      method name->Type
        return value

      method $id(set_,name)( value )
  endClass
$endMacro

$macro UI_INHERITED_ATTRIBUTE(name,Type,default_value,ComponentType)
  augment
    METHODS
      method UIComponent.name->Type
        return UIAttributes.name( this )

      method UIComponent.$id(set_,name)( value:Type )
        UIAttributes.$id(set_,name)( this, value )

      method UIAttributes.name( component:UIComponent )->Type
        if (component.attributes)
          local result = component.attributes.name
          if (result) return result.value
        endIf
        if (component.parent) return component.parent.name
        return default_value

      method UIAttributes.$id(set_,name)( component:UIComponent, value:Type )
        if (component.attributes) component.attributes.$id(set_,name)( value )
        else                      component.attributes = ComponentType( value )

      method UIAttribute.name->Type?
        if (next) return next.name
        return null

      method UIAttribute.$id(set_,name)( value:Type )
        if (next) next.$id(set_,name)( value )
        else      next = ComponentType( value )
  endAugment

  class ComponentType( value:Type ) : UIAttribute
    METHODS
      method name->Type?
        return value

      method $id(set_,name)( value )
  endClass
$endMacro

$macro UI_FN_ATTRIBUTE(name,Type,ComponentType)
  augment
    METHODS
      method UIComponent.name( callback:Type )
        UIAttributes.$id(set_,name)( this, callback )

      method UIAttributes.name( component:UIComponent )
        if (component.attributes) component.attributes.name(component)

      method UIAttributes.$id(set_,name)( component:UIComponent, fn:Type )
        if (component.attributes) component.attributes.$id(set_,name)( fn )
        else                      component.attributes = ComponentType( fn )

      method UIAttribute.name( component:UIComponent )
        if (next) next.name( component )

      method UIAttribute.$id(set_,name)( fn:Type )
        if (next) next.$id(set_,name)( fn )
        else      next = ComponentType( fn )
  endAugment

  class ComponentType( fn:Type ) : UIAttribute
    METHODS
      method name( component:UIComponent )
        if (fn) fn( component )

      method $id(set_,name)( fn )
  endClass
$endMacro

class UIAttributes [singleton]
  METHODS
endClass

class UIAttribute
  PROPERTIES
    next : UIAttribute

  METHODS
endClass

