module Rogue

# Generated by Froley. WARNING: WILL BE OVERWRITTEN.
module Rogue

enum TokenType( symbol:String, attributes=0:Int32 )
  DEFINITIONS
    ATTRIBUTE_CONTENT = 1
    ATTRIBUTE_STRUCTURAL = 2
    ATTRIBUTE_META = 4

  CATEGORIES
    EOL("end of line",1)
    CHARACTER("character",1)
    BINARY_INTEGER("integer",1)
    OCTAL_INTEGER("integer",1)
    HEX_INTEGER("integer",1)
    INTEGER("integer",1)
    REAL_NUMBER("real",1)
    STRING("string",1)
    IDENTIFIER("identifier",1)
    SYMBOL_DOLLAR("$")
    PLACEHOLDER("$placeholder",1)
    KEYWORD_AND("and")
    KEYWORD_AUGMENT("augment")
    KEYWORD_BLOCK("block")
    KEYWORD_CATCH("catch",2)
    KEYWORD_CLASS("class",2)
    KEYWORD_DEFINITIONS("DEFINITIONS",2)
    KEYWORD_DOWN_TO("downTo")
    KEYWORD_ELSE("else",2)
    KEYWORD_ELSE_IF("elseIf",2)
    KEYWORD_END_BLOCK("endBlock",2)
    KEYWORD_END_CLASS("endClass",2)
    KEYWORD_END_FOR_EACH("endForEach",2)
    KEYWORD_END_IF("endIf",2)
    KEYWORD_END_LOOP("endLoop",2)
    KEYWORD_END_ROUTINE("endRoutine",2)
    KEYWORD_END_TRY("endTry",2)
    KEYWORD_END_USE("endUse",2)
    KEYWORD_END_WHICH("endWhich",2)
    KEYWORD_END_WHILE("endWhile",2)
    KEYWORD_EXPORT("export")
    KEYWORD_FALSE("false")
    KEYWORD_FOR_EACH("forEach")
    KEYWORD_GLOBAL("global")
    KEYWORD_GLOBAL_PROPERTIES("GLOBAL PROPERTIES",2)
    KEYWORD_GLOBAL_METHODS("GLOBAL METHODS",2)
    KEYWORD_IF("if")
    KEYWORD_IMPORT("import")
    KEYWORD_INCLUDE("include")
    KEYWORD_INSTANCE_OF("instanceOf")
    KEYWORD_IS("is")
    KEYWORD_IS_COMPOUND("isCompound")
    KEYWORD_IS_PRIMITIVE("isPrimitive")
    KEYWORD_IS_REFERENCE("isReference")
    KEYWORD_IS_TYPE("isType")
    KEYWORD_LOCAL("local")
    KEYWORD_LOOP("loop")
    KEYWORD_METHOD("method",2)
    KEYWORD_METHODS("METHODS",2)
    KEYWORD_MODULE("module",2)
    KEYWORD_NATIVE_SECTION("NATIVE",2)
    KEYWORD_NATIVE("native")
    KEYWORD_NATIVE_HEADER("nativeHeader")
    KEYWORD_NATIVE_CODE("nativeCode")
    KEYWORD_NO_ACTION("noAction")
    KEYWORD_NOT("not")
    KEYWORD_NULL("null")
    KEYWORD_OR("or")
    KEYWORD_PI("pi")
    KEYWORD_PROPERTIES("PROPERTIES",2)
    KEYWORD_RETURN("return")
    KEYWORD_ROUTINE("routine",2)
    KEYWORD_THIS("this")
    KEYWORD_THROW("throw")
    KEYWORD_TRUE("true")
    KEYWORD_TRY("try")
    KEYWORD_UNDEFINED("undefined")
    KEYWORD_USE("use")
    KEYWORD_USES("uses",2)
    KEYWORD_WHICH("which")
    KEYWORD_WHILE("while")
    KEYWORD_XOR("xor")
    META_DEFINE("$define",4)
    META_INCLUDE("$include",4)
    SYMBOL_AMPERSAND("&")
    SYMBOL_ARROW("->")
    SYMBOL_ASTERISK("*")
    SYMBOL_AT("@")
    SYMBOL_BACKSLASH("\\")
    SYMBOL_BANG("!")
    SYMBOL_CARET("^")
    SYMBOL_CLOSE_CURLY("}",2)
    SYMBOL_CLOSE_SQUARE("]",2)
    SYMBOL_CLOSE_PAREN(")",2)
    SYMBOL_COLON(":",2)
    SYMBOL_COLON_COLON("::")
    SYMBOL_COMMA(",",2)
    SYMBOL_COMPARE("<>")
    SYMBOL_DOTDOT("..")
    SYMBOL_DOTDOTLT("..<")
    SYMBOL_DOTDOTGT("..>")
    SYMBOL_DOT_OPEN_SQUARE(".[")
    SYMBOL_DOUBLE_VERTICAL_BAR("||",2)
    SYMBOL_EMPTY_SQUARE_BRACKETS("[]")
    SYMBOL_EQ("==")
    SYMBOL_EQUALS("=")
    SYMBOL_GE(">=")
    SYMBOL_GT(">")
    SYMBOL_GTGT(">>",2)
    SYMBOL_LE("<=")
    SYMBOL_LEFT_SHIFT(":<<:")
    SYMBOL_LEFT_SHIFT_EQUALS(":<<:=")
    SYMBOL_LITERAL_OPEN_SQUARE("@[")
    SYMBOL_LT("<")
    SYMBOL_LTLT("<<")
    SYMBOL_MINUS("-")
    SYMBOL_MINUS_MINUS("--")
    SYMBOL_NE("!=")
    SYMBOL_OPEN_CURLY("{")
    SYMBOL_OPEN_SQUARE("[")
    SYMBOL_OPEN_PAREN("(")
    SYMBOL_PERCENT("%")
    SYMBOL_PERIOD(".")
    SYMBOL_PLUS("+")
    SYMBOL_PLUS_PLUS("++")
    SYMBOL_QUESTION("?")
    SYMBOL_QUESTION_COLON("?:")
    SYMBOL_RIGHT_SHIFT(":>>:")
    SYMBOL_RIGHT_SHIFT_EQUALS(":>>:=")
    SYMBOL_RIGHT_SHIFT_X(":>>>:")
    SYMBOL_RIGHT_SHIFT_X_EQUALS(":>>>:=")
    SYMBOL_SEMICOLON(";",2)
    SYMBOL_SLASH("/")
    SYMBOL_TILDE("~")
    SYMBOL_VERTICAL_BAR("|")
    SYMBOL_PLUS_EQUALS("+=")
    SYMBOL_MINUS_EQUALS("-=")
    SYMBOL_TIMES_EQUALS("*=")
    SYMBOL_DIVIDE_EQUALS("/=")
    SYMBOL_MOD_EQUALS("%=")
    SYMBOL_AND_EQUALS("&=")
    SYMBOL_OR_EQUALS("|=")
    EOI("end of input")
    COMPILE_ERROR("compile error")
endEnum
