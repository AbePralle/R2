#{
module Rogue

class EscapeAnalyzer : InspectionVisitor
  PROPERTIES
    control_stack = ControlStructure[]

  METHODS
    method visit_type( type:Type )
      if (type.is_aspect) return
      prior.visit_type( type )

    method track_escape( t:Token, control_type:ControlType )
      forEach (scope in control_stack step -1)
        if (scope.catches(control_type))
          return
        else
          scope.control_escapes = true
          if (scope.requires_cleanup)
            this_procedure.attributes.requires_cleanup = true
          endIf
        endIf
      endForEach

    method on( cmd:ControlStructure )->Logical
      control_stack.add( cmd )
      prior.on( cmd )
      control_stack.remove_last
      return false

    #method on_visit( cmd:CreateObjectAndSetLocal )
      #track_escape

    method on_visit( cmd:EscapeForEach )
      track_escape( cmd.t, ControlType.FOR_EACH )

    method on( cmd:If )->Logical
      control_stack.add( cmd )
      prior.on( cmd )
      control_stack.remove_last
      return false

    method on( cmd:Iterator )->Logical
      control_stack.add( cmd )
      prior.on( cmd )
      control_stack.remove_last
      return false

    method on_visit( cmd:Return )
      track_escape( cmd.t, ControlType.RETURN )

    method on_visit( cmd:ReturnOnException )
      track_escape( cmd.t, ControlType.THROW )

    method on_visit( cmd:Throw )
      track_escape( cmd.t, ControlType.THROW )
endClass

augment Procedure
  METHODS
    method requires_cleanup->Logical
      if (Program.gc_auto)
        forEach (p in parameters)
          if (not p.is_anchored)
            if (p.type.is_reference or p.type.contains_reference) return true
          endIf
        endForEach

        forEach (v in locals)
          if (v.type.is_reference or v.type.contains_reference) return true
        endForEach
      endIf

      return false
endAugment

augment
  METHODS
    method Cmd.catches( escape_type:ControlType )->Logical
      return false

    method Iterator.catches( escape_type:ControlType )->Logical
      if (control_type != escape_type) return false
      catches_escape = true
      return true
endAugment
}#
