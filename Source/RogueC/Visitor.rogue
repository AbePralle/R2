# Generated and updated by Froley. Custom changes will not be overwritten; customize as desired.
module Rogue

class Visitor
  # Tree-rebuilding visitor.
  #
  # Default per-node call sequence:
  #
  #   CALL                       OVERLOADABLE METHOD
  #   --------------------       -----------------------------------------
  #   visit(cmd)->Cmd         -> on(cmd:CmdType)->Cmd
  #     handle(cmd)    ->   on_visit(cmd:CmdType)
  #       visit_children(cmd) ->     on_visit_children(cmd:CmdType)
  #     validate(cmd)->Cmd    ->   on_validate(cmd:CmdType)->Cmd
  #
  # For visit() and validate() the AST is rebuilt with the return value the
  # call, so return 'cmd' to keep that subtree or else return a different Cmd
  # node to replace the subtree.
  PROPERTIES
    this_module    : Module
    this_type      : Type
    this_procedure : Procedure

  METHODS
    method on( cmd:Cmd )->Cmd
      handle( cmd )
      return validate( cmd )

    method on_visit( cmd:Cmd )
      # Called from on(CmdType). If you overload this method with an extended
      # Cmd type, this node's children will only be visited if and
      # when you call visit_children(cmd).
      visit_children( cmd )

    method on_validate( cmd:Cmd )->Cmd
      return cmd

    method visit( cmd:Cmd )->Cmd [propagated]
      # Call to invoke the appropriate on/on_visit() for the given Cmd type.
      #
      # For example:
      #   method on( cmd:Binary )->Cmd
      #     cmd.left  = visit(cmd.left)
      #     cmd.right = visit(cmd.right)
      #     return cmd
      if (cmd is null) return null
      return cmd.dispatch<<ThisType>>( this )

    method visit_children( cmd:Cmd )->Cmd [propagated]
      # Call from 'on()' or 'on_visit()' handler to visit subtrees.
      cmd.dispatch_on_visit_children<<ThisType>>( this )
      return cmd

    method handle( cmd:Cmd )->Cmd [propagated]
      # Primarily for internal use - see on(Cmd) for usage.
      cmd.dispatch_on_visit<<ThisType>>( this )
      return cmd

    method visit( m:Module )
      visit_routines( m )
      visit_types( m )

    method visit_routines( m:Module )
      temporarily this_module = m
        forEach(r in m.routines)
          temporarily this_procedure = r
            visit( r )
          endTemporarily
        endForEach
      endTemporarily

    method visit_types( m:Module )
      temporarily this_module = m
        forEach (type in m.types)
          visit_type( type )
        endForEach
      endTemporarily

    method visit_type( type:Type )
      temporarily this_type = type
        on_visit_type( type )
      endTemporarily

    method on_visit_type( type:Type )
      visit_global_methods( type )
      visit_methods( type )

    method visit_global_methods( type:Type )
      temporarily this_type = type
        forEach (m in type.global_methods)
          temporarily this_procedure = m
            visit( m )
          endTemporarily
        endForEach
      endTemporarily

    method visit_methods( type:Type )
      temporarily this_type = type
        forEach (m in type.methods)
          temporarily this_procedure = m
            visit( m )
          endTemporarily
        endForEach
      endTemporarily

    method validate( cmd:Cmd )->Cmd [propagated]
      if (cmd is null) return null
      return cmd.dispatch_on_validate<<ThisType>>( this )

    method on_visit_children( cmd:Cmd )
      # Overloaded automatically by the Froley compiler
      noAction

    method on_visit_children( cmd:CmdList )
      forEach (element in writer=cmd.list.rewriter)
        local visited_element = visit( element )
        if (visited_element) writer.write( visited_element )
      endForEach

    method on_visit_children( cmd:Statements )
      forEach (element in writer=cmd.list.rewriter)
        local visited_element = visit( element )
        if (visited_element)
          if (visited_element instanceOf Statements)
            writer.write( forEach in visited_element )
          else
            writer.write( visited_element )
          endIf
        endIf
      endForEach


    method on_visit_children( cmd:Binary )
      cmd.left = visit(cmd.left)
      cmd.right = visit(cmd.right)

    method on_visit_children( cmd:Unary )
      cmd.operand = visit(cmd.operand)

    method on_visit_children( cmd:ContextAccess )
      cmd.context = visit(cmd.context)
      cmd.args = visit(cmd.args)

    method on_visit_children( cmd:IndexedAccess )
      cmd.context = visit(cmd.context)
      cmd.index = visit(cmd.index)

    method on_visit_children( cmd:Procedure )
      cmd.parameters = visit(cmd.parameters)->(as Parameters)
      cmd.return_type = visit(cmd.return_type)->(as Type)
      cmd.attributes = visit(cmd.attributes)->(as Attributes)
      cmd.body = visit(cmd.body)->(as LocalScope)

    method on_visit_children( cmd:Local )
      cmd.type = visit(cmd.type)->(as Type)

    method on_visit_children( cmd:LocalDeclarations )
      cmd.declarations = visit(cmd.declarations)
      cmd.type = visit(cmd.type)->(as Type)

    method on_visit_children( cmd:Access )
      cmd.args = visit(cmd.args)

    method on_visit_children( cmd:Assign )
      cmd.target = visit(cmd.target)
      cmd.new_value = visit(cmd.new_value)

    method on_visit_children( cmd:SetLocal )
      cmd.info = visit(cmd.info)->(as Local)
      cmd.new_value = visit(cmd.new_value)

    method on_visit_children( cmd:GetLocal )
      cmd.info = visit(cmd.info)->(as Local)

    method on_visit_children( cmd:Class )
      cmd.constructor_properties = visit(cmd.constructor_properties)->(as Parameters)
      cmd.base_types = visit(cmd.base_types)->(as TypeList)
      cmd.attributes = visit(cmd.attributes)->(as Attributes)
      cmd.sections = visit(cmd.sections)

    method on_visit_children( cmd:PropertyDeclarations )
      cmd.declarations = visit(cmd.declarations)
      cmd.type = visit(cmd.type)->(as Type)

    method on_visit_children( cmd:Property )
      cmd.initial_value = visit(cmd.initial_value)
      cmd.type = visit(cmd.type)->(as Type)

    method on_visit_children( cmd:ForEachCollection )
      cmd.data = visit(cmd.data)
      cmd.starting_index = visit(cmd.starting_index)
      cmd.step_size = visit(cmd.step_size)

    method on_visit_children( cmd:ForEachControl )
      cmd.optional_at = visit(cmd.optional_at)->(as ForEachAt)
      cmd.collection = visit(cmd.collection)->(as ForEachCollection)

    method on_visit_children( cmd:Block )
      cmd.initialization = visit(cmd.initialization)
      cmd.statements = visit(cmd.statements)

    method on_visit_children( cmd:Conditional )
      cmd.initialization = visit(cmd.initialization)
      cmd.condition = visit(cmd.condition)
      cmd.statements = visit(cmd.statements)

    method on_visit_children( cmd:ForEach )
      cmd.condition = visit(cmd.condition)->(as ForEachControl)
      cmd.statements = visit(cmd.statements)

    method on_visit_children( cmd:ControlStructure )
      cmd.statements = visit(cmd.statements)

    method on_visit_children( cmd:Iterator )
      cmd.initialization = visit(cmd.initialization)
      cmd.control = visit(cmd.control)
      cmd.condition = visit(cmd.condition)
      cmd.statements = visit(cmd.statements)
      cmd.upkeep = visit(cmd.upkeep)

    method on_visit_children( cmd:If )
        cmd.condition = visit(cmd.condition)
        cmd.statements = visit(cmd.statements)
        cmd.cmd_else = visit(cmd.cmd_else)->(as If)

    method on_visit_children( cmd:Return )
      cmd.result = visit(cmd.result)

    method on_visit_children( cmd:Routine )
      cmd.parameters = visit(cmd.parameters)->(as Parameters)
      cmd.return_type = visit(cmd.return_type)->(as Type)
      cmd.attributes = visit(cmd.attributes)->(as Attributes)
      cmd.body = visit(cmd.body)->(as LocalScope)

    method on_visit_children( cmd:CallProcedure )
      cmd.args = visit(cmd.args)

    method on_visit_children( cmd:UsesModule )
      cmd.path = visit(cmd.path)
      cmd.attributes = visit(cmd.attributes)->(as Attributes)

    method on_visit_children( cmd:DefineModule )
      cmd.attributes = visit(cmd.attributes)->(as Attributes)

    method on_visit_children( cmd:ModuleQualifiedID )
      cmd.context = visit(cmd.context)

    method on_visit_children( cmd:NativeExpression )
      cmd.result_type = visit(cmd.result_type)

    method on_visit_children( cmd:CreateObject )
      cmd.of_type = visit(cmd.of_type)->(as Type)
      cmd.args = visit(cmd.args)

    method on_visit_children( cmd:Method )
      cmd.type_context = visit(cmd.type_context)->(as Type)
      cmd.parameters = visit(cmd.parameters)->(as Parameters)
      cmd.return_type = visit(cmd.return_type)->(as Type)
      cmd.attributes = visit(cmd.attributes)->(as Attributes)
      cmd.body = visit(cmd.body)->(as LocalScope)

    method on_visit_children( cmd:TypeContext )
      cmd.type = visit(cmd.type)->(as Type)

    method on_visit_children( cmd:AddAndAssignLocal )
      cmd.info = visit(cmd.info)->(as Local)
      cmd.operand = visit(cmd.operand)

    method on_visit_children( cmd:OpAndAssign )
      cmd.target = visit(cmd.target)
      cmd.operand = visit(cmd.operand)

    method on_visit_children( cmd:CallDynamicMethod )
      cmd.context = visit(cmd.context)
      cmd.args = visit(cmd.args)

    method on_visit_children( cmd:GetProperty )
      cmd.context = visit(cmd.context)
      cmd.info = visit(cmd.info)->(as Property)

    method on_visit_children( cmd:GetThisProperty )
      cmd.info = visit(cmd.info)->(as Property)

    method on_visit_children( cmd:SetProperty )
      cmd.context = visit(cmd.context)
      cmd.info = visit(cmd.info)->(as Property)
      cmd.new_value = visit(cmd.new_value)

    method on_visit_children( cmd:SetThisProperty )
      cmd.info = visit(cmd.info)->(as Property)
      cmd.new_value = visit(cmd.new_value)

    method on_visit_children( cmd:GetSingleton )
      cmd.type = visit(cmd.type)->(as Type)

    method on_visit_children( cmd:ConvertToType )
      cmd.operand = visit(cmd.operand)
      cmd.to_type = visit(cmd.to_type)->(as Type)

    method on_visit_children( cmd:CreateObjectAndSetLocal )
      cmd.of_type = visit(cmd.of_type)->(as Type)
      cmd.info = visit(cmd.info)->(as Local)

    method on_visit_children( cmd:Definition )
      cmd.value = visit(cmd.value)

    method on_visit_children( cmd:Throw )
      cmd.exception = visit(cmd.exception)

    method on_visit_children( cmd:Try )
      cmd.initialization = visit(cmd.initialization)
      cmd.statements = visit(cmd.statements)
      cmd.catches = visit(cmd.catches)->(as Catches)

    method on_visit_children( cmd:Catch )
      cmd.initialization = visit(cmd.initialization)
      cmd.exception_type = visit(cmd.exception_type)->(as Type)
      cmd.statements = visit(cmd.statements)

    method on_visit_children( cmd:Convert )
      cmd.operand = visit(cmd.operand)

    method on_visit_children( cmd:Stepper )
      cmd.operand = visit(cmd.operand)

    method on_visit_children( cmd:Type )
      cmd.type_args = visit(cmd.type_args)->(as TemplateArgs)

    method on_visit_children( cmd:CallStaticMethod )
      cmd.context = visit(cmd.context)
      cmd.args = visit(cmd.args)

    method on_visit_children( cmd:InlineWhich )
      cmd.cases = visit(cmd.cases)->(as InlineWhichCases)

    method on_visit_children( cmd:InlineWhichCase )
      cmd.condition = visit(cmd.condition)
      cmd.value = visit(cmd.value)

    #method on_visit_children( cmd:DiscardResult )
      #cmd.operand = visit(cmd.operand)

    method on_visit_children( cmd:IsType )
      cmd.operand = visit(cmd.operand)
      cmd.compare_type = visit(cmd.compare_type)->(as Type)

    method on_visit_children( cmd:InstanceOf )
      cmd.operand = visit(cmd.operand)
      cmd.compare_type = visit(cmd.compare_type)->(as Type)

    method on_visit_children( cmd:IsCompound )
      cmd.operand = visit(cmd.operand)

    method on_visit_children( cmd:IsPrimitive )
      cmd.operand = visit(cmd.operand)

    method on_visit_children( cmd:IsReference )
      cmd.operand = visit(cmd.operand)

    method on_visit_children( cmd:Print )
      cmd.args = visit(cmd.args)

    method on_visit_children( cmd:Println )
      cmd.args = visit(cmd.args)

    method on_visit_children( cmd:ContextBlock )
      cmd.context = visit(cmd.context)
      cmd.commands = visit(cmd.commands)

    method on_visit_children( cmd:NamedArg )
      cmd.value = visit(cmd.value)

    method on_visit_children( cmd:AddAndAssignThisProperty )
      cmd.info = visit(cmd.info)->(as Property)
      cmd.operand = visit(cmd.operand)

    method on_visit_children( cmd:Loop )
      cmd.loop_count = visit(cmd.loop_count)
      cmd.statements = visit(cmd.statements)

    method on_visit_children( cmd:GlobalPropertyDeclarations )
      cmd.declarations = visit(cmd.declarations)
      cmd.type = visit(cmd.type)->(as Type)
      cmd.attributes = visit(cmd.attributes)->(as Attributes)

    method on_visit_children( cmd:TypeAccess )
      cmd.of_type = visit(cmd.of_type)->(as Type)
      cmd.args = visit(cmd.args)

    method on_visit_children( cmd:GetGlobalProperty )
      cmd.info = visit(cmd.info)->(as Property)

    method on_visit_children( cmd:SetGlobalProperty )
      cmd.info = visit(cmd.info)->(as Property)
      cmd.new_value = visit(cmd.new_value)

    method on_visit_children( cmd:ContextDirectAccess )
      cmd.context = visit(cmd.context)

endClass

