module Rogue

class CSpecializer : Visitor
  PROPERTIES
    writer         : CWriter
    this_module    : Module
    this_type      : Type
    this_procedure : Procedure
    autoname_index = 0

    statement_injector : ListRewriter<<Cmd>>

  METHODS
    method init( this_module )

    method visit( this_type )
      this_procedure = null
      # TODO

    method autoname( base:String )->String
      local result = "_auto_$_$"(base,autoname_index)
      ++autoname_index
      return result

    method on_visit( cmd:Procedure )
      this_type = null
      this_procedure = cmd
      autoname_index = 0

      forEach (p at i in cmd.parameters)
        block p = p->(as Local)
          p.c_name = "$_$" (p.name,i)
        endBlock
      endForEach

      visit_children( cmd )

    method on_visit( cmd:Statements )
      temporarily statement_injector = cmd.list.rewriter
        forEach (statement in statement_injector)
          statement = visit( statement )
          if (statement) statement_injector.write( statement )
        endForEach
      endTemporarily

endClass

augment
  METHODS
    method Module.specialize_c
      local specializer = CSpecializer( this )
      forEach (type in types)
        specializer.visit( type )
      endForEach

      forEach (r in routines)
        specializer.visit( r )
      endForEach
endAugment
