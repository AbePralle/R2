module RogueC

class ConvertDynamicCallsToStaticAndVirtualCalls : Visitor [singleton]
  METHODS
    method on( cmd:CallDynamicMethod )->Cmd
      local info = cmd.info

      contingent
        if (cmd.context.type.is_aspect or info.attributes.is_abstract)
          local group = Program.dynamic_methods[info.dynamic_signature].methods
          assert group
          necessary (group and group.count == 1 and not group.first.attributes.is_placeholder)
          info = group.first
        else
          necessary (not info.attributes.dynamic_dispatch or not info.attributes.is_overridden)
        endIf

      satisfied
        local cmd_call = CallStaticMethod( cmd.t, cmd.context, info, cmd.args ).[ result_discarded=cmd.result_discarded ]
        return visit( cmd_call )

      unsatisfied
        local group = Program.dynamic_methods[info.dynamic_signature]
        if (group) group.is_used = true
        return visit_content( cmd )

      endContingent

    method on( cmd:CallThisDynamicMethod )->Cmd
      local info = cmd.info

      contingent
        if (this_type.is_aspect or info.attributes.is_abstract)
          local group = Program.dynamic_methods[info.dynamic_signature].methods
          assert group
          necessary (group and group.count == 1 and not group.first.attributes.is_placeholder)
          info = group.first
        else
          necessary (not info.attributes.dynamic_dispatch or not info.attributes.is_overridden)
        endIf

      satisfied
        local cmd_call = CallThisStaticMethod( cmd.t, info, cmd.args ).[ result_discarded=cmd.result_discarded ]
        return visit( cmd_call )

      unsatisfied
        local group = Program.dynamic_methods[info.dynamic_signature]
        if (group) group.is_used = true
        return visit_content( cmd )

      endContingent

endClass
