module RogueC

# Generated by Froley. Will not be overwritten; customize as desired.
$include "ScannerCore.rogue"

class Scanner : ScannerCore, Poolable
  PROPERTIES
    beginning_of_line : ScannerLocation

  METHODS
    method init

    method init( file:File )
      prior.init( file )
      beginning_of_line = _scanner.location

    method init( filepath:String, content:String, line=1, column=1 )
      prior.init( filepath, content, line, column )

    method init( _filepath, _scanner )
      prior.init( _filepath, _scanner )
      beginning_of_line = _scanner.location
      tokens.reserve( _scanner.count / 3 )

    method on_return_to_pool
      @_filepath = null
      @_scanner  = null

      @line   = 1
      @column = 1

      @tokens = Token[]
      @buffer.clear
      @output.clear

      @start_ip = 0
      @halt     = false

      @_position_stack.clear
      @_line_stack.clear
      @_column_stack.clear
      @_token_pos_stack.clear

      # GENERATED PROPERTIES
      @count        = 0
      @ch           = 0
      @saved_buffer = null
      @base         = 0
      @hex2         = 0
      @hex4         = 0
      @hex_digit    = 0
      @value        = 0
      @digits       = 0

    method mark_beginning_of_line
      beginning_of_line = _scanner.location

    method process_comment
      local comment = buffer->String
      if (comment.contains("FIXME"))
        local cur_loc = _scanner.location
        _scanner.location = beginning_of_line

        buffer.clear
        while (_scanner.position < cur_loc.position)
          buffer.print( _scanner.read )
        endWhile
        comment = buffer->String

        local matches = comment.split('\n').[ discard( not $.contains("FIXME") ) ]
        forEach (match in matches)
          println "[FIXME][$:$] $"(File.filename(_filepath),beginning_of_line.line,match)
        endForEach
      endIf

endClass
