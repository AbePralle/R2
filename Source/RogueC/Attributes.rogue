module Rogue

class Attribute
  DEFINITIONS
    PRIMITIVE          = (1:<<:0)
    COMPOUND           = (1:<<:1)
    ENUM               = (1:<<:2)
    OBJECT             = (1:<<:3)
    ASPECT             = (1:<<:4)
    EXPORT             = (1:<<:5)
    ESSENTIAL          = (1:<<:6)
    SINGLETON          = (1:<<:7)
    DEFINED            = (1:<<:8)
    RESOLVED           = (1:<<:9)
    HAS_RETURN         = (1:<<:10)
    VISITING           = (1:<<:11)
    OVERRIDDEN         = (1:<<:12)
    DYNAMIC_DISPATCH   = (1:<<:13)
    INSERT             = (1:<<:14)
    APPEND             = (1:<<:15)
    CONTAINS_REFERENCE = (1:<<:16)
    RETURNS_THIS       = (1:<<:17)
    DEFAULT_PARAMETER  = (1:<<:18)
    IS_GLOBAL          = (1:<<:19)
    REFERENCE_LIST     = (1:<<:20)
    ANCHORED           = (1:<<:21)
    OPTIONAL           = (1:<<:22)
    REQUIRES_CLEANUP   = (1:<<:23)
    ABSTRACT           = (1:<<:24)
    FALLBACK           = (1:<<:25)
    AUGMENT            = (1:<<:26)
    PLACEHOLDER        = (1:<<:27)
    COLLECTED          = (1:<<:28)
endClass

class Attributes : CmdList
  ROGUE_ATTRIBUTE( is_primitive,         Attribute.PRIMITIVE )
  ROGUE_ATTRIBUTE( is_compound,          Attribute.COMPOUND )
  ROGUE_ATTRIBUTE( is_enum,              Attribute.ENUM )
  ROGUE_ATTRIBUTE( is_object,            Attribute.OBJECT )
  ROGUE_ATTRIBUTE( is_aspect,            Attribute.ASPECT )
  ROGUE_ATTRIBUTE( is_exported,          Attribute.EXPORT )
  ROGUE_ATTRIBUTE( is_essential,         Attribute.ESSENTIAL )
  ROGUE_ATTRIBUTE( is_singleton,         Attribute.SINGLETON )
  ROGUE_ATTRIBUTE( is_defined,           Attribute.DEFINED )
  ROGUE_ATTRIBUTE( is_resolved,          Attribute.RESOLVED )
  ROGUE_ATTRIBUTE( has_return,           Attribute.HAS_RETURN )
  ROGUE_ATTRIBUTE( is_visiting,          Attribute.VISITING )
  ROGUE_ATTRIBUTE( is_overridden,        Attribute.OVERRIDDEN )
  ROGUE_ATTRIBUTE( dynamic_dispatch,     Attribute.DYNAMIC_DISPATCH )
  ROGUE_ATTRIBUTE( is_insert,            Attribute.INSERT )
  ROGUE_ATTRIBUTE( is_append,            Attribute.APPEND )
  ROGUE_ATTRIBUTE( contains_reference,   Attribute.CONTAINS_REFERENCE )
  ROGUE_ATTRIBUTE( returns_this,         Attribute.RETURNS_THIS )
  ROGUE_ATTRIBUTE( is_default_parameter, Attribute.DEFAULT_PARAMETER )
  ROGUE_ATTRIBUTE( is_global,            Attribute.IS_GLOBAL )
  ROGUE_ATTRIBUTE( is_reference_list,    Attribute.REFERENCE_LIST )
  ROGUE_ATTRIBUTE( is_anchored,          Attribute.ANCHORED )
  ROGUE_ATTRIBUTE( is_optional,          Attribute.OPTIONAL )
  ROGUE_ATTRIBUTE( requires_cleanup,     Attribute.REQUIRES_CLEANUP )
  ROGUE_ATTRIBUTE( is_abstract,          Attribute.ABSTRACT )
  ROGUE_ATTRIBUTE( is_fallback,          Attribute.FALLBACK )
  ROGUE_ATTRIBUTE( is_augment,           Attribute.AUGMENT )
  ROGUE_ATTRIBUTE( is_placeholder,       Attribute.PLACEHOLDER )
  ROGUE_ATTRIBUTE( is_collected,         Attribute.COLLECTED )

  PROPERTIES
    flags : Int32

  METHODS
    method init( t )

    method init( t, flags )

    method init( other:Attributes )
      t = other.t
      flags = other.flags

    method add( cmd:Cmd )
      flags |= cmd.attribute_flags

    method add( flags:Int32 )
      this.flags |= flags

    method contains( flags:Int32 )->Logical
      return (flags & flags)?

    method contains( value:String )->Logical
      if ((forEach in this)->String == value) return true
      return false

    method description->String
      return "Attributes" + list_description

    method is_reference->Logical
      return (flags & (Attribute.OBJECT | Attribute.ASPECT))?
endClass

augment
  METHODS
    method Cmd.attribute_flags->Int32
      return 0

    method AttributeAbstract.attribute_flags->Int32
      return Attribute.ABSTRACT

    method AttributeAppend.attribute_flags->Int32
      return Attribute.APPEND

    method AttributeAspect.attribute_flags->Int32
      return Attribute.ASPECT

    method AttributeCompound.attribute_flags->Int32
      return Attribute.COMPOUND

    method AttributeEssential.attribute_flags->Int32
      return Attribute.ESSENTIAL

    method AttributeExport.attribute_flags->Int32
      return Attribute.EXPORT

    method AttributeInsert.attribute_flags->Int32
      return Attribute.INSERT

    method AttributePrimitive.attribute_flags->Int32
      return Attribute.PRIMITIVE

    method AttributeReturnsThis.attribute_flags->Int32
      return Attribute.RETURNS_THIS

    method AttributeSingleton.attribute_flags->Int32
      return Attribute.SINGLETON
endAugment

