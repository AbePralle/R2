module Rogue

class Attribute
  DEFINITIONS
    GENERATED       = 1
    PRIMITIVE       = (1:<<:1)
    OBJECT          = (1:<<:2)
    EXPORT          = (1:<<:3)
    ESSENTIAL       = (1:<<:4)
    SINGLETON       = (1:<<:5)
    DEFINED         = (1:<<:6)
    ORGANIZED       = (1:<<:7)
    RESOLVED        = (1:<<:8)
    ANCHORED        = (1:<<:9)  # holds a reference that has been ref-counted elsewhere in the stack
    METHOD          = (1:<<:10) # object method (not global method or routine)
    CONTROL_ESCAPES = (1:<<:11)
endClass

class Attributes : CmdList
  ROGUE_ATTRIBUTE( is_generated,    Attribute.GENERATED )
  ROGUE_ATTRIBUTE( is_primitive,    Attribute.PRIMITIVE )
  ROGUE_ATTRIBUTE( is_object,       Attribute.OBJECT )
  ROGUE_ATTRIBUTE( is_exported,     Attribute.EXPORT )
  ROGUE_ATTRIBUTE( is_essential,    Attribute.ESSENTIAL )
  ROGUE_ATTRIBUTE( is_singleton,    Attribute.SINGLETON )
  ROGUE_ATTRIBUTE( is_defined,      Attribute.DEFINED )
  ROGUE_ATTRIBUTE( is_organized,    Attribute.ORGANIZED )
  ROGUE_ATTRIBUTE( is_resolved,     Attribute.RESOLVED )
  ROGUE_ATTRIBUTE( is_anchored,     Attribute.ANCHORED )
  ROGUE_ATTRIBUTE( is_method,       Attribute.METHOD )
  ROGUE_ATTRIBUTE( control_escapes, Attribute.CONTROL_ESCAPES )

  PROPERTIES
    attributes : Int32

  METHODS
    method init( t )

    method init( t, attributes )

    method init( other:Attributes )
      t = other.t
      attributes = other.attributes

    method add( cmd:Cmd )
      attributes |= cmd.attribute_flags

    method add( flags:Int32 )
      attributes |= flags

    method contains( flags:Int32 )->Logical
      return (attributes & flags)?

    method contains( value:String )->Logical
      if ((forEach in this)->String == value) return true
      return false

    method description->String
      return "Attributes" + list_description

    method is_reference->Logical
      return (attributes & (Attribute.OBJECT))?
endClass

augment
  METHODS
    method Cmd.attribute_flags->Int32
      return 0

    method AttributeEssential.attribute_flags->Int32
      return Attribute.ESSENTIAL

    method AttributeExport.attribute_flags->Int32
      return Attribute.EXPORT

    method AttributeSingleton.attribute_flags->Int32
      return Attribute.SINGLETON
endAugment

